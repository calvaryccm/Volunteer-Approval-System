@using CCM.Volunteer.ApprovalProcess.Core.Models;
@using CCM.Volunteer.ApprovalProcess.Core.ViewModels;
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<RedFlagViewModel>

<div class="col-md-8 col-lg-6">
    <div class="well profile">
        <div class="col-sm-12">
            <div class="col-xs-12 col-sm-8">
                <h2>@Model.VolunteerInfo.Nickname @Model.VolunteerInfo.Last_Name</h2>
                <p>
                    <strong>Birthdate: </strong>

                    @if (Model.VolunteerInfo.Date_of_Birth.HasValue)
                    {

                        <span>@Model.VolunteerInfo.Date_of_Birth.Value.ToShortDateString() (@(Model.VolunteerInfo.__Age) years old)</span>
                    }
                    else
                    {
                        <span><em>No birthdate listed</em></span>
                    }
                </p>

                <p><strong>Clearing Date: </strong> @(Model.VolunteerApplication.Background_Complete.HasValue ? Model.VolunteerApplication.Background_Complete.Value.ToShortDateString() : string.Empty) </p>
                <p><strong>App Submitted: </strong> @Model.VolunteerApplication.Start_Date.ToShortDateString() </p>
                <p><strong>Ministry: </strong>@(Model.VolunteerApplication.MinistryToVolunteerFor != null ? Model.VolunteerApplication.MinistryToVolunteerFor.Program_Name : "No ministry specified")</p>
                <p>
                    <strong>Status: </strong>
                    @if (Model.VolunteerApplication.VolunteerStatus != null)
                    {
                        switch (Model.VolunteerApplication.VolunteerStatus.MQ_Status_ID)
                        {
                            case 1:
                                <span class="label label-success">@Model.VolunteerApplication.VolunteerStatus.MQ_Status</span>;
                                break;

                            case 2:
                            <span class="label label-default">@Model.VolunteerApplication.VolunteerStatus.MQ_Status</span>;
                            break;

                            case 3:
                            <span class="label label-warning">@Model.VolunteerApplication.VolunteerStatus.MQ_Status</span>;
                            break;

                            case 4:
                            <span class="label label-warning">@Model.VolunteerApplication.VolunteerStatus.MQ_Status</span>;
                            break;

                            case 5:
                            <span class="label label-danger">@Model.VolunteerApplication.VolunteerStatus.MQ_Status</span>;
                            break;

                            default:
                            @Model.VolunteerApplication.VolunteerStatus.MQ_Status
                            break;

                        }
                    }
                    else
                    {
                        <span class="label label-default">No status available</span>
                    }
                </p>
                <p>
                    <strong>Campus: </strong>
                    @switch (@Model.VolunteerApplication.Volunteer_Campus)
                    {
                        case 5:
                            <span class="tags melbourne">Melbourne Campus</span>;
                            break;

                        case 6:
                        <span class="tags viera">Viera Campus</span>;
                        break;

                        case 7:
                        <span class="tags sebastian">Sebastian Campus</span>;
                        break;

                        default:
                        <span class="tags default">Churchwide</span>;
                        break;
                    }
                </p>
            </div>
            <div class="col-xs-12 col-sm-4 text-center">
                <figure>
                    <img src="@( Model.VolunteerInfo.DefaultImageUrl + "?w=200")" alt="" class="img-thumbnail img-responsive">
                    <p>&nbsp;</p>
                </figure>
            </div>

            @if (Html.RenderContext.Context.Request.Url.Path.Contains("red-flag"))
            {
                <div class="col-xs-12 text-center">
                    @{int approved = 0, hold = 0, problem = 0;
                    }
                    @foreach (var item in Model.RedFlagNotes)
                {

                    if (item.Details.MPRouter_Item_Status_ID == 1)
                    {
                        approved++;
                    }
                    else if (item.Details.MPRouter_Item_Status_ID == 2)
                    {
                        hold++;
                    }
                    else if (item.Details.MPRouter_Item_Status_ID == 3)
                    {
                        problem++;
                    }

                }

                    <div class="col-xs-12 col-sm-4 approveBlock">
                        <h2><strong id="approvedVotes"> @approved</strong></h2>
                        <p><small>Approvals</small></p>
                    </div>

                    <div class="col-xs-12 col-sm-4 holdBlock">
                        <h2><strong id="holdVotes">@hold</strong></h2>
                        <p><small>Holds</small></p>
                    </div>

                    <div class="col-xs-12 col-sm-4 problemBlock">
                        <h2><strong id="problemVotes">@problem</strong></h2>
                        <p><small>Problems</small></p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>