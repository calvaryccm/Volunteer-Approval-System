@using CCM.Volunteer.ApprovalProcess.Core.Models;
@using CCM.Volunteer.ApprovalProcess.Core.ViewModels;
@using System.Linq;

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<RedFlagViewModel>
@{
    Layout = "Views/Shared/_LayoutPage.cshtml";
}

<!-- Profile and Milestones -->
<div class="row">
    <!-- Profile -->
    @Html.Partial("Views/Shared/_Profile.cshtml", Model)

    <!--Milestones and Small Groups-->
    <div class="col-md-4 col-lg-6">
        <div class="well">
            <h2>Summary</h2>
            <!-- Summary tabs tabs -->
            <ul class="nav nav-tabs">
                <li class="active"><a href="#spiritual" data-toggle="tab">Spiritual</a></li>
                <li><a href="#milestones" data-toggle="tab">Milestones</a></li>

                @if (Model.CurrentGroups.Count() >= 1)
                {
                    <li><a href="#smallGroup" data-toggle="tab">Small Group</a></li>
                }

                @if (Model.HouseholdMembers.Count() > 1)
                {
                    <li><a href="#family" data-toggle="tab">Family Members</a></li>
                }
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <div class="tab-pane active" id="spiritual">
                    <div class="panel">
                        <div class="panel-body">
                            <dl class="dl-horizontal">
                                @if (Model.VolunteerApplication.When_Saved.HasValue)
                                {
                                    <dt>When saved</dt>
                                    <dd><em>@Model.VolunteerApplication.When_Saved.Value.ToString("MMMM' 'yyyy") (Age @(((int)Math.Floor((double)(((Model.VolunteerApplication.When_Saved.Value) - (Model.VolunteerInfo.Date_of_Birth.Value)).Days / 365)))))</em></dd>
                                }
                                else
                                {

                                    <dt>When saved</dt>
                                    <dd><em>Not on file</em></dd>
                                }
                                <dt>Started attending CCM</dt>
                                <dd><em>@Model.VolunteerApplication.Started_Attending_Date.Value.ToString("MMMM' 'yyyy") (<span class="timeago" title="@(Model.VolunteerApplication.Started_Attending_Date.Value.ToUniversalTime().ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'"))"></span>)</em></dd>

                                @if(Model.VolunteerApplication.Baptized.HasValue)
                                {
                                    if (Model.VolunteerApplication.Baptized.Value)
                                    {
                                        <dt>Baptized</dt>
                                        <dd><span class="glyphicon glyphicon-ok pass"></span> <em>Yes</em></dd>

                                        <dt>Baptized on</dt>
                                        <dd><em>@Model.VolunteerApplication.Baptized_When.Value.ToString("MMMM' 'yyyy") (Age @((int)Math.Floor((double)(((Model.VolunteerApplication.Baptized_When.Value) - (Model.VolunteerInfo.Date_of_Birth.Value)).Days / 365))))</em></dd>

                                        <dt>Baptized where</dt>
                                        <dd><em>@Model.VolunteerApplication.Baptized_Where</em></dd>
                                    }
                                    else
                                    {
                                        <dt>Baptized</dt>
                                        <dd><span class="glyphicon glyphicon-remove fail"></span> <em>No</em></span></dd>
                                    }
                                }
                                else
                                {
                                    <dt>Baptized</dt>
                                    <dd><span class="glyphicon glyphicon-remove fail"></span> <em>Not on file</em></span></dd>
                                }
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="milestones">
                    <div class="panel">
                        <div class="panel-body">
                            <dl class="dl-horizontal">
                                @foreach (var milestone in Model.Milestones)
                                {
                                    <dt>@milestone.Milestone_Title</dt>
                                    <dd>
                                        <em>
                                            @(milestone.Date_Accomplished.HasValue ? milestone.Date_Accomplished.Value.ToShortDateString() : string.Empty) &nbsp;
                                            (<span class="timeago" title="@(milestone.Date_Accomplished.HasValue ? milestone.Date_Accomplished.Value.ToUniversalTime().ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'") : string.Empty)"></span>)
                                        </em>
                                    </dd>

                                }
                            </dl>
                        </div>
                    </div>
                </div>

                <!-- Shows groups if the users are in them -->
                @if (Model.CurrentGroups.Count() > 0)
                {
                    <div class="tab-pane" id="smallGroup">
                        <div class="panel">
                            <div class="panel-body">
                                <dl class="dl-horizontal">
                                    @foreach (var item in Model.CurrentGroups)
                                    {
                                        <dt>@item.Group_Name</dt>
                                        <dd>
                                            <em>
                                                @item.Start_Date.ToUniversalTime().ToString("MMMM' 'yyyy") &nbsp;
                                                (<span class="timeago" title="@item.Start_Date.ToUniversalTime().ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'")"></span>)
                                            </em>
                                        </dd>

                                    }
                                </dl>
                            </div>
                        </div>
                    </div>
                }
                <!-- Show family members -->
                @if (Model.HouseholdMembers.Count() > 1)
                {
                    <div class="tab-pane" id="family">
                        <div class="panel">
                            <div class="panel-body">
                                <dl class="dl-horizontal">
                                    @foreach (var item in Model.HouseholdMembers)
                                    {
                                        <dt>@item.Nickname @item.Last_Name</dt>

                                        <dd>
                                            <em>
                                                @if (item.Household_Position_ID != null)
                                                {
                                                    switch (item.Household_Position_ID)
                                                    {
                                                        case 1:
                                                            <span>Head of Household</span>
                                                            break;

                                                        case 2:
                                                        <span>Minor Child</span>
                                                            break;

                                                        case 3:
                                                        <span>Other Child</span>
                                                            break;

                                                        case 4:
                                                        <span>Adult Child</span>
                                                            break;

                                                        case 5:
                                                        <span>Guest Child</span>
                                                            break;

                                                        case 6:
                                                        <span>Company</span>
                                                            break;

                                                        default:
                                                        @Model.VolunteerApplication.VolunteerStatus.MQ_Status
                                                            break;
                                                    }
                                                }
                                            </em>
                                        </dd>
                                    }
                                </dl>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


</div>

<!-- Red Flag Notes -->
@Html.Partial("Views/Shared/_RedFlagNotes.cshtml", Model)

<!-- Reference Checks -->
@Html.Partial("Views/Shared/_ReferenceChecks.cshtml", Model)


<!-- Create a Red Flag Entry -->
<div class="row">
    <div class="col-lg-12">
        <div class="well">
            <h2>Your Response</h2>
            <div class="row">
                <div class="col-lg-12">
                    <div id="success-message" class="bs-callout bs-callout-success" style="display:none;"><p>Your response has been submitted successfully</p></div>
                    <div id="error-message" class="bs-callout bs-callout-danger" style="display:none;"><p>An error has occurred. Contact Tech Support if this continues.</p></div>
                    <div class="bs-callout bs-callout-loading loading" style="display: none;">Uploading your entry.</div>
                    <form id="form" role="form" action="/red-flag/@(Model.VolunteerApplication.Ministry_Questionaire_ID)" method="post">
                        <div class="form-group">
                            <label>Select a status</label><br />
                            <select class="form-control" id="selectList" name="statusid">

                                @{
                                    int selection = 0;
                                    Int32.TryParse(Html.RenderContext.Context.Request.Query.d, out selection);

                                }


                                @foreach (var item in Model.AppStatuses)
                                {
                                    switch (item.MPRouter_Item_Status_ID)
                                    {
                                        case 1:
                                            <option @(selection == 0 ? "selected=\"selected\"" : string.Empty) id="@item.MPRouter_Item_Status_ID" value="@item.MPRouter_Item_Status_ID" data-content="<i class='glyphicon glyphicon-ok'></i>@item.MPRouter_Item_Status" >@item.MPRouter_Item_Status</option>
                                            break;

                                        case 2:
                                        <option data-divider="true"></option>
                                        <option @(selection == 1 ? "selected=\"selected\"" : string.Empty) id="@item.MPRouter_Item_Status_ID" value="@item.MPRouter_Item_Status_ID" data-content="<i class='glyphicon glyphicon-question-sign'></i>@item.MPRouter_Item_Status" >@item.MPRouter_Item_Status</option>
                                            break;

                                        case 3:
                                        <option data-divider="true"></option>
                                        <option @(selection == 2 ? "selected=\"selected\"" : string.Empty) id="@item.MPRouter_Item_Status_ID" value="@item.MPRouter_Item_Status_ID" data-content="<i class='glyphicon glyphicon-remove'></i>@item.MPRouter_Item_Status" >@item.MPRouter_Item_Status</option>
                                        <option data-divider="true"></option>
                                            break;

                                        default:
                                            break;

                                    }

                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Notes</label>
                            <textarea class="form-control" rows="3" name="notes">@(Model.CurrentRedFlagNotes != null ? Model.CurrentRedFlagNotes.Details.Notes : string.Empty)</textarea>
                        </div>
                        <button id="submitbutton" type="submit" class="btn btn-lg btn-melbourneBlue">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
